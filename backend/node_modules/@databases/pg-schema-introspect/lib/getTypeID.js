"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

const getTypes_1 = require("./getTypes");

const getSearchPath_1 = require("./getSearchPath");

async function getTypeID(connection, query) {
  const types = await getTypes_1.default(connection, query);
  const fullTypeName = query.schemaName ? `${query.schemaName}.${query.typeName}` : query.typeName;

  if (types.length === 0) {
    throw new Error(`Could not find type: ${fullTypeName}`);
  }

  if (types.length === 1) {
    return types[0].typeID;
  }

  const searchPath = await getSearchPath_1.default(connection, {
    includeNonExistantSchemas: true
  });

  for (const schemaName of searchPath) {
    const type = types.find(ty => ty.schemaName === schemaName);

    if (type) {
      return type.typeID;
    }
  }

  throw new Error(`Could not find type: ${fullTypeName}. It could be any of: ${types.map(t => `${t.schemaName}.${t.typeName}`).join(', ')}`);
}

exports.default = getTypeID;