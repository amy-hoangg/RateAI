"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.writeSchema = exports.printSchema = exports.PgDataTypeID = void 0;
const pg_data_type_id_1 = require("@databases/pg-data-type-id");
exports.PgDataTypeID = pg_data_type_id_1.default;
const shared_print_types_1 = require("@databases/shared-print-types");
const PgPrintContext_1 = require("./PgPrintContext");
const getTypeScriptType_1 = require("./getTypeScriptType");
const PgPrintOptions_1 = require("./PgPrintOptions");
const printSchema_1 = require("./printers/printSchema");
const GENERATED_STATEMENT = 'Generated by: @databases/pg-schema-print-types';
function filterSchema(unfilteredSchema, options) {
    const isTableIgnored = (0, shared_print_types_1.getIgnoreTest)(options);
    const ignoredClassIds = new Set(unfilteredSchema.classes
        .filter((c) => isTableIgnored(c.className))
        .map((c) => c.classID));
    return {
        ...unfilteredSchema,
        classes: unfilteredSchema.classes
            .filter((c) => !ignoredClassIds.has(c.classID))
            .map((c) => ({
            ...c,
            constraints: c.constraints.filter((c) => !ignoredClassIds.has(c.classID) &&
                (c.referencedClassID === 0 ||
                    !ignoredClassIds.has(c.referencedClassID))),
        })),
    };
}
function getPrinter(unfilteredSchema, options) {
    const schema = filterSchema(unfilteredSchema, options);
    const context = new PgPrintContext_1.default(getTypeScriptType_1.default, schema, new PgPrintOptions_1.default(options));
    (0, printSchema_1.default)(schema, context);
    return context.printer;
}
function printSchema(schema, options = {}) {
    return getPrinter(schema, options).getFiles();
}
exports.printSchema = printSchema;
async function writeSchema(schema, directory, options = {}) {
    await (0, shared_print_types_1.writeFiles)({
        context: getPrinter(schema, options),
        directory,
        generatedStatement: GENERATED_STATEMENT,
    });
}
exports.writeSchema = writeSchema;
//# sourceMappingURL=index.js.map