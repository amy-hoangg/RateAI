"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const pg_schema_introspect_1 = require("@databases/pg-schema-introspect");
const PgPrintContext_1 = require("../PgPrintContext");
const getTypeScriptType_1 = require("../getTypeScriptType");
const PgPrintOptions_1 = require("../PgPrintOptions");
const printSchema_1 = require("../printers/printSchema");
test('replace filter', async () => {
    const schema = {
        types: [],
        classes: [
            {
                schemaID: 42,
                schemaName: `my_schema`,
                classID: 10,
                className: `my_table_my_name`,
                kind: pg_schema_introspect_1.ClassKind.OrdinaryTable,
                comment: null,
                attributes: [],
                constraints: [],
            },
        ],
    };
    const printContext = new PgPrintContext_1.default(getTypeScriptType_1.default, schema, new PgPrintOptions_1.default({
        tableTypeName: '{{ TABLE_NAME | replace "my_" "" | singular | pascal-case }}',
        tableInsertParametersTypeName: '{{ TABLE_NAME | replace "^my_" "" | singular | pascal-case }}Insert',
    }));
    (0, printSchema_1.default)(schema, printContext);
    expect(printContext.printer.getFiles()).toMatchInlineSnapshot(`
    Array [
      Object {
        "content": "import TableName, {TableMyNameInsert} from './my_table_my_name'

    interface DatabaseSchema {
      my_table_my_name: {record: TableName, insert: TableMyNameInsert};
    }
    export default DatabaseSchema;

    function serializeValue(_tableName: string, _columnName: string, value: unknown): unknown {
      return value;
    }
    export {serializeValue}

    export type {
      TableMyNameInsert,
      TableName,
    }
    ",
        "filename": "index.ts",
      },
      Object {
        "content": "interface TableMyNameInsert {
    }
    export type {TableMyNameInsert}

    interface TableName {
    }
    export default TableName;
    ",
        "filename": "my_table_my_name.ts",
      },
      Object {
        "content": "[
      {
        \\"name\\": \\"my_table_my_name\\",
        \\"columns\\": []
      }
    ]
    ",
        "filename": "schema.json",
      },
    ]
  `);
});
//# sourceMappingURL=print-from-code.test.js.map