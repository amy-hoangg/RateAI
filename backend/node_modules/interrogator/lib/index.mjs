import inquirer from 'inquirer';

async function typedPrompt(question) {
    const { prompt } = inquirer;
    return (await prompt(question)).value;
}
function replaceSeparators(choices) {
    const i = inquirer;
    return choices.map((c) => c instanceof Separator ? new i.Separator(c.line) : c);
}
export class Separator {
    constructor(line) {
        this.type = 'separator';
        this.line = line;
    }
}
function getDefaultValue(choices, defaultValue) {
    if (defaultValue === undefined)
        return undefined;
    if (choices.every((c) => typeof c === 'string'))
        return defaultValue;
    const result = choices.findIndex((c) => c.value === defaultValue);
    if (result === -1)
        return undefined;
    return result;
}
export async function list(message, choices, defaultValue) {
    return await typedPrompt({
        type: 'list',
        name: 'value',
        message,
        choices: replaceSeparators(choices),
        default: getDefaultValue(choices, defaultValue),
    });
}
export async function rawList(message, choices, defaultValue) {
    return await typedPrompt({
        type: 'rawlist',
        name: 'value',
        message,
        choices: replaceSeparators(choices),
        default: getDefaultValue(choices, defaultValue),
    });
}
export async function expand(message, choices, defaultValue) {
    return await typedPrompt({
        type: 'expand',
        name: 'value',
        message,
        choices: replaceSeparators(choices),
        default: getDefaultValue(choices, defaultValue),
    });
}
export async function checkboxes(message, choices) {
    return await typedPrompt({
        type: 'checkbox',
        name: 'value',
        message,
        choices: replaceSeparators(choices),
    });
}
export async function confirm(message, defaultValue = true) {
    return await typedPrompt({
        type: 'confirm',
        name: 'value',
        message,
        default: defaultValue,
    });
}
export async function input(message, defaultValue, validate) {
    return await typedPrompt({
        type: 'input',
        name: 'value',
        message,
        default: defaultValue,
        validate,
    });
}
export async function password(message, defaultValue, validate) {
    return await typedPrompt({
        type: 'password',
        name: 'value',
        message,
        default: defaultValue,
        validate,
    });
}
export async function editor(message, defaultValue = '') {
    return await typedPrompt({
        type: 'editor',
        name: 'value',
        message,
        default: defaultValue,
    });
}
//# sourceMappingURL=index.js.map